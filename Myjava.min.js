// ClipboardJS (existing)
var clipboard = new ClipboardJS('.copytoclipboard');

// CryptoJS (existing)
function convertstr(str) { return str.trim(); }
// ... (existing CryptoJS code) ...

// ==============================================
// NEW: Safelink Features (from linkati.js)
// ==============================================

// Safelink Configuration (customize as needed)
const safelinkConfig = {
  countdownDuration: 15, // seconds
  blogFeedUrl: "/feeds/posts/summary?alt=json&max-results=1",
  redirectParam: "url",
  encryptionKey: "YourSecretKey" // Use AES key for extra security
};

// Base64 Helper (using CryptoJS)
function encodeURL(url) {
  return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(url));
}
function decodeURL(encoded) {
  return CryptoJS.enc.Base64.parse(encoded).toString(CryptoJS.enc.Utf8);
}

// Safelink Redirect Logic
function initSafelink() {
  // Parse URL hash (e.g., #?url=Base64EncodedURL)
  const hash = window.location.hash.substring(1);
  const params = new URLSearchParams(hash);
  const encodedURL = params.get(safelinkConfig.redirectParam);

  if (encodedURL) {
    // Decode URL and validate via Blogger feed
    const targetURL = decodeURL(encodedURL);
    validateAndRedirect(targetURL);
  }
}

// Validate URL using Blogger JSON feed
function validateAndRedirect(url) {
  fetch(`${safelinkConfig.blogFeedUrl}&q=${encodeURIComponent(url)}`)
    .then(response => response.json())
    .then(data => {
      if (data.feed.entry?.length > 0) {
        showCountdown(url); // Valid URL: Show countdown
      } else {
        showToast("No post found!"); // Invalid URL
      }
    })
    .catch(() => showToast("Validation failed!"));
}

// Countdown Timer UI
function showCountdown(url) {
  const container = document.createElement("div");
  container.innerHTML = `
    <div class="safelink-box">
      <p>Redirecting in <span class="countdown">${safelinkConfig.countdownDuration}</span>s...</p>
      <div class="progress-bar"><div class="progress"></div></div>
      <a href="${url}" class="safeGoL">Continue</a>
    </div>
  `;
  document.body.appendChild(container);

  // Start countdown
  let timeLeft = safelinkConfig.countdownDuration;
  const timer = setInterval(() => {
    timeLeft--;
    document.querySelector(".countdown").textContent = timeLeft;
    document.querySelector(".progress").style.width = `${(timeLeft / safelinkConfig.countdownDuration) * 100}%`;
    if (timeLeft <= 0) {
      clearInterval(timer);
      window.location.href = url;
    }
  }, 1000);
}

// Toast Notification (existing in linkati.js)
function showToast(message) {
  const toast = document.createElement("div");
  toast.className = "toast";
  toast.textContent = message;
  document.body.appendChild(toast);
  setTimeout(() => toast.remove(), 3000);
}

// Obfuscate Links on Page Load
document.querySelectorAll("a[data-safelink]").forEach(link => {
  link.addEventListener("click", (e) => {
    e.preventDefault();
    const rawURL = link.href;
    const encryptedURL = encodeURL(aesCrypto.encrypt(rawURL, safelinkConfig.encryptionKey)); // AES + Base64
    window.location.hash = `?${safelinkConfig.redirectParam}=${encryptedURL}`;
    initSafelink(); // Trigger Safelink flow
  });
});

// Initialize on page load
document.addEventListener("DOMContentLoaded", initSafelink);
